---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
  noindex?: boolean;
  type?: "website" | "article" | "blog";
  publishedTime?: string;
  modifiedTime?: string;
  tags?: string[];
  author?: string;
  section?: string;
}

const {
  title,
  description = "kttlsaa - A digital garden of thoughts, ideas, and explorations",
  image = "/f1.png",
  canonical,
  noindex = false,
  type = "website",
  publishedTime,
  modifiedTime,
  tags = [],
  author = "kttlsaa",
  section
} = Astro.props;

// Construct full URLs
const canonicalURL = canonical ? new URL(canonical, Astro.site) : Astro.url;
const imageURL = new URL(image, Astro.site);
const siteName = "kttlsaa Digital Garden";

// Generate JSON-LD structured data
const jsonLd = {
  "@context": "https://schema.org",
  "@type": type === "article" ? "Article" : "WebSite",
  "name": title,
  "description": description,
  "url": canonicalURL.href,
  "image": imageURL.href,
  ...(type === "article" && {
    "author": {
      "@type": "Person",
      "name": author
    },
    "publisher": {
      "@type": "Organization",
      "name": siteName,
      "logo": {
        "@type": "ImageObject",
        "url": imageURL.href
      }
    },
    ...(publishedTime && { "datePublished": publishedTime }),
    ...(modifiedTime && { "dateModified": modifiedTime }),
    ...(section && { "articleSection": section }),
    ...(tags.length > 0 && { "keywords": tags.join(", ") })
  })
};
---

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Robots meta -->
{noindex && <meta name="robots" content="noindex, nofollow" />}

<!-- SEO Meta Tags -->
<title>{title}</title>
<meta name="description" content={description} />
{author && <meta name="author" content={author} />}
{tags.length > 0 && <meta name="keywords" content={tags.join(", ")} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type === "article" ? "article" : "website"} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL} />
<meta property="og:image:alt" content={`${title} - ${siteName}`} />
<meta property="og:site_name" content={siteName} />
{type === "article" && publishedTime && <meta property="article:published_time" content={publishedTime} />}
{type === "article" && modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
{type === "article" && author && <meta property="article:author" content={author} />}
{type === "article" && section && <meta property="article:section" content={section} />}
{type === "article" && tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={canonicalURL} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageURL} />
<meta name="twitter:image:alt" content={`${title} - ${siteName}`} />

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />